!function(host){function injectAdvice(target,methodName,advice,joinPoint){isFunction(target[methodName])&&(jsAspect.JOIN_POINT.AROUND===joinPoint&&(advice=wrapAroundAdvice(advice)),target[methodName][adviceEnhancedFlagName]||(enhanceWithAdvices(target,methodName),target[methodName][adviceEnhancedFlagName]=!0),target[methodName][joinPoint].unshift(advice))}function wrapAroundAdvice(advice){var wrappedAdvice=function(leftAroundAdvices){var oThis=this,nextWrappedAdvice=leftAroundAdvices.shift(),args=toArray(arguments).slice(1);if(nextWrappedAdvice){var nextUnwrappedAdvice=function(){var argsForWrapped=toArray(arguments);return argsForWrapped.unshift(leftAroundAdvices),nextWrappedAdvice.apply(oThis,argsForWrapped)};args.unshift(nextUnwrappedAdvice)}return advice.apply(this,args)};return wrappedAdvice.__originalAdvice=advice,wrappedAdvice}function enhanceWithAdvices(target,methodName){var originalMethod=target[methodName];target[methodName]=function(){var returnValue,self=this,method=target[methodName],args=toArray(arguments),executionContext=new ExecutionContext(target,methodName,args);if(applyBeforeAdvices(self,method,args,executionContext),!executionContext.isStopped){try{returnValue=applyAroundAdvices(self,method,args,executionContext)}catch(exception){throw applyAfterThrowingAdvices(self,method,exception,executionContext),exception}if(applyAfterAdvices(self,method,args,executionContext),!executionContext.isStopped)return applyAfterReturningAdvices(self,method,returnValue,executionContext)}};for(var join_point in jsAspect.JOIN_POINT)target[methodName][jsAspect.JOIN_POINT[join_point]]=[];target[methodName][jsAspect.JOIN_POINT.AROUND].unshift(wrapAroundAdvice(originalMethod))}function applyBeforeAdvices(context,method,args,executionContext){applyIndependentAdvices(method[jsAspect.JOIN_POINT.BEFORE],context,method,args,executionContext)}function applyAroundAdvices(context,method,args){var aroundAdvices=method[jsAspect.JOIN_POINT.AROUND].slice(0,method[jsAspect.JOIN_POINT.AROUND].length),firstAroundAdvice=aroundAdvices.shift(),argsForAroundAdvicesChain=args.slice();return argsForAroundAdvicesChain.unshift(aroundAdvices),firstAroundAdvice.apply(context,argsForAroundAdvicesChain)}function applyAfterThrowingAdvices(context,method,exception,executionContext){var afterThrowingAdvices=method[jsAspect.JOIN_POINT.AFTER_THROWING];afterThrowingAdvices.forEach(function(advice){advice.call(context,executionContext,exception)})}function applyAfterAdvices(context,method,args,executionContext){applyIndependentAdvices(method[jsAspect.JOIN_POINT.AFTER],context,method,args,executionContext)}function applyAfterReturningAdvices(context,method,returnValue,executionContext){var afterReturningAdvices=method[jsAspect.JOIN_POINT.AFTER_RETURNING];return afterReturningAdvices.reduce(function(acc,current){return current(executionContext,acc)},returnValue)}function applyIndependentAdvices(advices,context,method,args,executionContext){advices.forEach(function(advice){var adviceArguments=args.slice();adviceArguments.unshift(executionContext),executionContext.isStopped||advice.apply(context,adviceArguments)})}function ExecutionContext(target,methodName,args){this.target=target,this.method={name:methodName,arguments:args},this.isStopped=!1,void 0===this.target.constructor.name&&(this.target.constructor.name=functionName(this.target.constructor))}function Advice(pointcut,joinPoint,func){void 0===pointcut&&(pointcut=DEFAULT_POINTCUT),this.pointcut=pointcut,this.joinPoint=joinPoint,this.func=func}function Before(func,pointcut){Advice.call(this,pointcut,jsAspect.JOIN_POINT.BEFORE,func)}function After(func,pointcut){Advice.call(this,pointcut,jsAspect.JOIN_POINT.AFTER,func)}function AfterReturning(func,pointcut){Advice.call(this,pointcut,jsAspect.JOIN_POINT.AFTER_RETURNING,func)}function AfterThrowing(func,pointcut){Advice.call(this,pointcut,jsAspect.JOIN_POINT.AFTER_THROWING,func)}function Around(func,pointcut){Advice.call(this,pointcut,jsAspect.JOIN_POINT.AROUND,func)}function Aspect(advices){this.advices=advices instanceof Array?advices:toArray(arguments)}function isFunction(obj){return obj&&"[object Function]"===Object.prototype.toString.call(obj)}function functionName(func){var match=func.toString().match(/function\s+([^(?:\()\s]*)/);return match?match[1]:""}function toArray(args){return[].slice.call(args,0)}var jsAspect={POINTCUT:{METHODS:"methods",PROTOTYPE_METHODS:"prototypeMethods",PROTOTYPE_OWN_METHODS:"prototypeOwnMethods",METHOD:"method"},JOIN_POINT:{BEFORE:"__before",AFTER:"__after",AFTER_THROWING:"__afterThrowing",AFTER_RETURNING:"__afterReturning",AROUND:"__around"}},adviceEnhancedFlagName="__jsAspect_advice_enhanced",DEFAULT_POINTCUT=jsAspect.POINTCUT.PROTOTYPE_METHODS;jsAspect.introduce=function(target,pointcut,introduction){target=jsAspect.POINTCUT.PROTOTYPE_OWN_METHODS===pointcut||jsAspect.POINTCUT.PROTOTYPE_METHODS===pointcut?target.prototype:target;for(var property in introduction)introduction.hasOwnProperty(property)&&(target[property]=introduction[property]);return target},jsAspect.inject=function(target,pointcut,joinPoint,advice,methodName){var isMethodPointcut=jsAspect.POINTCUT.METHOD===pointcut,isPrototypeOwnMethodsPointcut=jsAspect.POINTCUT.PROTOTYPE_OWN_METHODS===pointcut,isPrototypeMethodsPointcut=jsAspect.POINTCUT.PROTOTYPE_METHODS===pointcut;if(isMethodPointcut)injectAdvice(target,methodName,advice,joinPoint);else{target=isPrototypeOwnMethodsPointcut||isPrototypeMethodsPointcut?target.prototype:target;for(var method in target)(target.hasOwnProperty(method)||isPrototypeMethodsPointcut)&&injectAdvice(target,method,advice,joinPoint)}},ExecutionContext.prototype.stop=function(){this.isStopped=!0},Aspect.prototype.applyTo=function(){var targets=toArray(arguments);this.advices.forEach(function(advice){targets.forEach(function(target){jsAspect.inject(target,advice.pointcut,advice.joinPoint,advice.func)})})},jsAspect.Advice={Before:Before,After:After,AfterReturning:AfterReturning,AfterThrowing:AfterThrowing,Around:Around},jsAspect.Aspect=Aspect,host.jsAspect=jsAspect}(this);